// ==========
// TRANS-PREP
// -----
// Gives backface visibility hidden to remove flickering effect on Webkit browsers
// http://blog.teamtreehouse.com/increase-your-sites-performance-with-hardware-accelerated-css
// ==========
@mixin trans-prep {
  // backface visibility
  -webkit-backface-visibility: hidden;
  -moz-backface-visibility: hidden;
  -ms-backface-visibility: hidden;
  backface-visibility: hidden;

  // Resets perspectives
  -webkit-perspective: 1000;
  -moz-perspective: 1000;
  -ms-perspective: 1000;
  perspective: 1000;
}

@mixin t3d ($args...) {
  transform: tranlate3d($args...)
}

@mixin animation ($delay, $duration, $animation, $fill-mode, $iteration-count) {
    -webkit-animation-delay: $delay;
    -webkit-animation-duration: $duration;
    -webkit-animation-name: $animation;
    -webkit-animation-fill-mode: $fill-mode;
    -webkit-animation-iteration-count: $iteration-count;
 
    -moz-animation-delay: $delay;
    -moz-animation-duration: $duration;
    -moz-animation-name: $animation;
    -moz-animation-fill-mode: $fill-mode;
    -moz-animation-iteration-count: $iteration-count;
 
    -o-animation-delay: $delay;
    -o-animation-duration: $duration;
    -o-animation-name: $animation;
    -o-animation-fill-mode: $fill-mode;
    -o-animation-iteration-count: $iteration-count;
 
    animation-delay: $delay;
    animation-duration: $duration;
    animation-name: $animation;
    animation-fill-mode: $fill-mode;
    animation-iteration-count: $iteration-count;
}

// @mixin keyframes($animationName) {
//     @-webkit-keyframes #{$animationName} {
//         @content;
//     }
//     @-moz-keyframes #{$animationName} {
//         @content;
//     }
//     @-o-keyframes #{$animationName} {
//         @content;
//     }
//     @keyframes #{$animationName} {
//         @content;
//     }
// }

@function calculateRem($size) {
  $remSize: $size / 16px;
  @return $remSize * 1rem;
}

@mixin font-size($size) {
  font-size: $size;
  font-size: calculateRem($size);
}

@mixin border-radius($radius:.25em) {
  border-radius: $radius;
}

@mixin iconSpan($margin-right:.5em) {
  margin-right: $margin-right;
}

// center vertically and/or horizontally an absolute positioned element
@mixin center($xy:xy) {
  @if $xy == xy {
    left: 50%;
    top: 50%;
    bottom: auto;
    right: auto;
    @include transform(translateX(-50%) translateY(-50%));
  }
  @else if $xy == x {
    left: 50%;
    right: auto;
    @include transform(translateX(-50%));
  }
  @else if $xy == y {
    top: 50%;
    bottom: auto;
    @include transform(translateY(-50%));
  }
}

// super light grid - it works with the .cd-container class inside style.scss
@mixin column($percentage, $float-direction:left) {
  width: 100% * $percentage;
  float: $float-direction;
}